apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: audiobook
  labels:
    app: audiobook
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audiobook
      component: backend
  template:
    metadata:
      labels:
        app: audiobook
        component: backend
    spec:
      containers:
      - name: backend
        image: audiobook/backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: PORT
          value: "5000"
        envFrom:
        - configMapRef:
            name: audiobook-config
        - secretRef:
            name: audiobook-secrets
        volumeMounts:
        - name: books-storage
          mountPath: /data/books
        - name: audio-storage
          mountPath: /data/audio
        - name: logs-storage
          mountPath: /data/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      volumes:
      - name: books-storage
        persistentVolumeClaim:
          claimName: books-pvc
      - name: audio-storage
        persistentVolumeClaim:
          claimName: audio-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: audiobook
  labels:
    app: audiobook
    component: backend
spec:
  selector:
    app: audiobook
    component: backend
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: audiobook
  labels:
    app: audiobook
    component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80