# Auth Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: audiobook
  labels:
    app: audiobook
    component: auth
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audiobook
      component: auth
  template:
    metadata:
      labels:
        app: audiobook
        component: auth
    spec:
      containers:
      - name: auth
        image: audiobook/auth:latest
        ports:
        - containerPort: 8002
        env:
        - name: PORT
          value: "8002"
        envFrom:
        - configMapRef:
            name: audiobook-config
        - secretRef:
            name: audiobook-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: audiobook
  labels:
    app: audiobook
    component: auth
spec:
  selector:
    app: audiobook
    component: auth
  ports:
  - port: 8002
    targetPort: 8002
    protocol: TCP
  type: ClusterIP
---
# Parser Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parser-service
  namespace: audiobook
  labels:
    app: audiobook
    component: parser
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audiobook
      component: parser
  template:
    metadata:
      labels:
        app: audiobook
        component: parser
    spec:
      containers:
      - name: parser
        image: audiobook/parser:latest
        ports:
        - containerPort: 3002
        env:
        - name: PORT
          value: "3002"
        envFrom:
        - configMapRef:
            name: audiobook-config
        - secretRef:
            name: audiobook-secrets
        volumeMounts:
        - name: books-storage
          mountPath: /data/books
        - name: logs-storage
          mountPath: /data/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: books-storage
        persistentVolumeClaim:
          claimName: books-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: parser-service
  namespace: audiobook
  labels:
    app: audiobook
    component: parser
spec:
  selector:
    app: audiobook
    component: parser
  ports:
  - port: 3002
    targetPort: 3002
    protocol: TCP
  type: ClusterIP
---
# Crawler Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crawler-service
  namespace: audiobook
  labels:
    app: audiobook
    component: crawler
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audiobook
      component: crawler
  template:
    metadata:
      labels:
        app: audiobook
        component: crawler
    spec:
      containers:
      - name: crawler
        image: audiobook/crawler:latest
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        envFrom:
        - configMapRef:
            name: audiobook-config
        - secretRef:
            name: audiobook-secrets
        volumeMounts:
        - name: books-storage
          mountPath: /data/books
        - name: logs-storage
          mountPath: /data/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: books-storage
        persistentVolumeClaim:
          claimName: books-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: audiobook
  labels:
    app: audiobook
    component: crawler
spec:
  selector:
    app: audiobook
    component: crawler
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
  type: ClusterIP
---
# TTS Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tts-service
  namespace: audiobook
  labels:
    app: audiobook
    component: tts
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audiobook
      component: tts
  template:
    metadata:
      labels:
        app: audiobook
        component: tts
    spec:
      containers:
      - name: tts
        image: audiobook/tts:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        envFrom:
        - configMapRef:
            name: audiobook-config
        volumeMounts:
        - name: audio-storage
          mountPath: /data/audio
        - name: logs-storage
          mountPath: /data/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
      volumes:
      - name: audio-storage
        persistentVolumeClaim:
          claimName: audio-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: tts-service
  namespace: audiobook
  labels:
    app: audiobook
    component: tts
spec:
  selector:
    app: audiobook
    component: tts
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
# Summarizer Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: summarizer-service
  namespace: audiobook
  labels:
    app: audiobook
    component: summarizer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audiobook
      component: summarizer
  template:
    metadata:
      labels:
        app: audiobook
        component: summarizer
    spec:
      containers:
      - name: summarizer
        image: audiobook/summarizer:latest
        ports:
        - containerPort: 8001
        env:
        - name: PORT
          value: "8001"
        envFrom:
        - configMapRef:
            name: audiobook-config
        volumeMounts:
        - name: logs-storage
          mountPath: /data/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: summarizer-service
  namespace: audiobook
  labels:
    app: audiobook
    component: summarizer
spec:
  selector:
    app: audiobook
    component: summarizer
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
  type: ClusterIP