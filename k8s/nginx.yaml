apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: audiobook
  labels:
    app: audiobook
    component: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audiobook
      component: nginx
  template:
    metadata:
      labels:
        app: audiobook
        component: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: ssl-certificates
          mountPath: /etc/nginx/ssl
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: ssl-certificates
        secret:
          secretName: ssl-certificates
      initContainers:
      - name: wait-for-frontend
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z frontend-service 3000; do echo waiting for frontend; sleep 2; done;']
      - name: wait-for-backend
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z backend-service 5000; do echo waiting for backend; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: audiobook
  labels:
    app: audiobook
    component: nginx
spec:
  selector:
    app: audiobook
    component: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: audiobook-ingress
  namespace: audiobook
  labels:
    app: audiobook
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - audiobook.example.com
    secretName: audiobook-tls
  rules:
  - host: audiobook.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 5000
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8002
      - path: /audio
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 5000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 3000